<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ligq.study.mybatis.demo.dao.TCreditMessageLogMapper">
  <resultMap id="BaseResultMap" type="com.ligq.study.mybatis.demo.model.TCreditMessageLog">
    <id column="SEQ_ID" jdbcType="VARCHAR" property="seqId" />
    <result column="CREDIT_APPLY_ID" jdbcType="VARCHAR" property="creditApplyId" />
    <result column="LESSEE_ID" jdbcType="VARCHAR" property="lesseeId" />
    <result column="CUSTOMER_ID" jdbcType="VARCHAR" property="customerId" />
    <result column="PRODUCT_ID" jdbcType="VARCHAR" property="productId" />
    <result column="REQ_DATA" jdbcType="VARCHAR" property="reqData" />
    <result column="RESP_DATA" jdbcType="VARCHAR" property="respData" />
    <result column="TYPE" jdbcType="CHAR" property="type" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="ERROR_CODE" jdbcType="VARCHAR" property="errorCode" />
    <result column="ERROR_DESC" jdbcType="VARCHAR" property="errorDesc" />
    <result column="CREATE_TIME" jdbcType="BIGINT" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="BIGINT" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="APPLY_TYPE" jdbcType="CHAR" property="applyType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SEQ_ID, CREDIT_APPLY_ID, LESSEE_ID, CUSTOMER_ID, PRODUCT_ID, REQ_DATA, RESP_DATA, 
    TYPE, STATUS, ERROR_CODE, ERROR_DESC, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER, 
    REMARK, APPLY_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_credit_message_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_credit_message_log
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_credit_message_log
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLogExample">
    delete from t_credit_message_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLog">
    insert into t_credit_message_log (SEQ_ID, CREDIT_APPLY_ID, LESSEE_ID, 
      CUSTOMER_ID, PRODUCT_ID, REQ_DATA, 
      RESP_DATA, TYPE, STATUS, ERROR_CODE, 
      ERROR_DESC, CREATE_TIME, CREATE_USER, 
      UPDATE_TIME, UPDATE_USER, REMARK, 
      APPLY_TYPE)
    values (#{seqId,jdbcType=VARCHAR}, #{creditApplyId,jdbcType=VARCHAR}, #{lesseeId,jdbcType=VARCHAR}, 
      #{customerId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{reqData,jdbcType=VARCHAR}, 
      #{respData,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{errorCode,jdbcType=VARCHAR}, 
      #{errorDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=BIGINT}, #{updateUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{applyType,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLog">
    insert into t_credit_message_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        SEQ_ID,
      </if>
      <if test="creditApplyId != null">
        CREDIT_APPLY_ID,
      </if>
      <if test="lesseeId != null">
        LESSEE_ID,
      </if>
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="reqData != null">
        REQ_DATA,
      </if>
      <if test="respData != null">
        RESP_DATA,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="errorCode != null">
        ERROR_CODE,
      </if>
      <if test="errorDesc != null">
        ERROR_DESC,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="applyType != null">
        APPLY_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        #{seqId,jdbcType=VARCHAR},
      </if>
      <if test="creditApplyId != null">
        #{creditApplyId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="reqData != null">
        #{reqData,jdbcType=VARCHAR},
      </if>
      <if test="respData != null">
        #{respData,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorDesc != null">
        #{errorDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLogExample" resultType="java.lang.Long">
    select count(*) from t_credit_message_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_credit_message_log
    <set>
      <if test="record.seqId != null">
        SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditApplyId != null">
        CREDIT_APPLY_ID = #{record.creditApplyId,jdbcType=VARCHAR},
      </if>
      <if test="record.lesseeId != null">
        LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.reqData != null">
        REQ_DATA = #{record.reqData,jdbcType=VARCHAR},
      </if>
      <if test="record.respData != null">
        RESP_DATA = #{record.respData,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.errorCode != null">
        ERROR_CODE = #{record.errorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errorDesc != null">
        ERROR_DESC = #{record.errorDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null">
        APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_credit_message_log
    set SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      CREDIT_APPLY_ID = #{record.creditApplyId,jdbcType=VARCHAR},
      LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      REQ_DATA = #{record.reqData,jdbcType=VARCHAR},
      RESP_DATA = #{record.respData,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=CHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      ERROR_CODE = #{record.errorCode,jdbcType=VARCHAR},
      ERROR_DESC = #{record.errorDesc,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{record.applyType,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLog">
    update t_credit_message_log
    <set>
      <if test="creditApplyId != null">
        CREDIT_APPLY_ID = #{creditApplyId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="reqData != null">
        REQ_DATA = #{reqData,jdbcType=VARCHAR},
      </if>
      <if test="respData != null">
        RESP_DATA = #{respData,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=CHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="errorCode != null">
        ERROR_CODE = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorDesc != null">
        ERROR_DESC = #{errorDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        APPLY_TYPE = #{applyType,jdbcType=CHAR},
      </if>
    </set>
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ligq.study.mybatis.demo.model.TCreditMessageLog">
    update t_credit_message_log
    set CREDIT_APPLY_ID = #{creditApplyId,jdbcType=VARCHAR},
      LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      REQ_DATA = #{reqData,jdbcType=VARCHAR},
      RESP_DATA = #{respData,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=CHAR},
      STATUS = #{status,jdbcType=CHAR},
      ERROR_CODE = #{errorCode,jdbcType=VARCHAR},
      ERROR_DESC = #{errorDesc,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=BIGINT},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{applyType,jdbcType=CHAR}
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
</mapper>