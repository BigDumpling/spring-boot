<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ligq.study.mybatis.demo.dao.TCreditApplyNodeInfoMapper">
  <resultMap id="BaseResultMap" type="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    <id column="SEQ_ID" jdbcType="VARCHAR" property="seqId" />
    <result column="CREDIT_APPLY_LOG_ID" jdbcType="VARCHAR" property="creditApplyLogId" />
    <result column="LESSEE_ID" jdbcType="VARCHAR" property="lesseeId" />
    <result column="CUSTOMER_ID" jdbcType="VARCHAR" property="customerId" />
    <result column="PRODUCT_ID" jdbcType="VARCHAR" property="productId" />
    <result column="CREDIT_NODE" jdbcType="VARCHAR" property="creditNode" />
    <result column="NODE_TYPE" jdbcType="CHAR" property="nodeType" />
    <result column="CREDIT_NODE_SORT" jdbcType="INTEGER" property="creditNodeSort" />
    <result column="FUND_NODE_SEQ" jdbcType="VARCHAR" property="fundNodeSeq" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="CREATE_TIME" jdbcType="BIGINT" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="BIGINT" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="APPLY_TYPE" jdbcType="CHAR" property="applyType" />
    <result column="CONTRACT_ID" jdbcType="VARCHAR" property="contractId" />
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="CONTRACT_NAME" jdbcType="VARCHAR" property="contractName" />
    <result column="CONTRACT_FILE_ID" jdbcType="VARCHAR" property="contractFileId" />
    <result column="FUND_CONTRACT_IDS" jdbcType="VARCHAR" property="fundContractIds" />
    <result column="FUND_CONTRACT_NOS" jdbcType="VARCHAR" property="fundContractNos" />
    <result column="FUND_CONTRACT_NAMES" jdbcType="VARCHAR" property="fundContractNames" />
    <result column="FUND_CONTRACT_FILE_IDS" jdbcType="VARCHAR" property="fundContractFileIds" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    <result column="CREDIT_NODE_DATA" jdbcType="LONGVARCHAR" property="creditNodeData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SEQ_ID, CREDIT_APPLY_LOG_ID, LESSEE_ID, CUSTOMER_ID, PRODUCT_ID, CREDIT_NODE, NODE_TYPE, 
    CREDIT_NODE_SORT, FUND_NODE_SEQ, STATUS, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER, 
    REMARK, APPLY_TYPE, CONTRACT_ID, CONTRACT_NO, CONTRACT_NAME, CONTRACT_FILE_ID, FUND_CONTRACT_IDS, 
    FUND_CONTRACT_NOS, FUND_CONTRACT_NAMES, FUND_CONTRACT_FILE_IDS
  </sql>
  <sql id="Blob_Column_List">
    CREDIT_NODE_DATA
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_credit_apply_node_info
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_credit_apply_node_info
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample">
    delete from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    insert into t_credit_apply_node_info (SEQ_ID, CREDIT_APPLY_LOG_ID, LESSEE_ID, 
      CUSTOMER_ID, PRODUCT_ID, CREDIT_NODE, 
      NODE_TYPE, CREDIT_NODE_SORT, FUND_NODE_SEQ, 
      STATUS, CREATE_TIME, CREATE_USER, 
      UPDATE_TIME, UPDATE_USER, REMARK, 
      APPLY_TYPE, CONTRACT_ID, CONTRACT_NO, 
      CONTRACT_NAME, CONTRACT_FILE_ID, FUND_CONTRACT_IDS, 
      FUND_CONTRACT_NOS, FUND_CONTRACT_NAMES, FUND_CONTRACT_FILE_IDS, 
      CREDIT_NODE_DATA)
    values (#{seqId,jdbcType=VARCHAR}, #{creditApplyLogId,jdbcType=VARCHAR}, #{lesseeId,jdbcType=VARCHAR}, 
      #{customerId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{creditNode,jdbcType=VARCHAR}, 
      #{nodeType,jdbcType=CHAR}, #{creditNodeSort,jdbcType=INTEGER}, #{fundNodeSeq,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{createTime,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=BIGINT}, #{updateUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{applyType,jdbcType=CHAR}, #{contractId,jdbcType=VARCHAR}, #{contractNo,jdbcType=VARCHAR}, 
      #{contractName,jdbcType=VARCHAR}, #{contractFileId,jdbcType=VARCHAR}, #{fundContractIds,jdbcType=VARCHAR}, 
      #{fundContractNos,jdbcType=VARCHAR}, #{fundContractNames,jdbcType=VARCHAR}, #{fundContractFileIds,jdbcType=VARCHAR}, 
      #{creditNodeData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    insert into t_credit_apply_node_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        SEQ_ID,
      </if>
      <if test="creditApplyLogId != null">
        CREDIT_APPLY_LOG_ID,
      </if>
      <if test="lesseeId != null">
        LESSEE_ID,
      </if>
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="creditNode != null">
        CREDIT_NODE,
      </if>
      <if test="nodeType != null">
        NODE_TYPE,
      </if>
      <if test="creditNodeSort != null">
        CREDIT_NODE_SORT,
      </if>
      <if test="fundNodeSeq != null">
        FUND_NODE_SEQ,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="applyType != null">
        APPLY_TYPE,
      </if>
      <if test="contractId != null">
        CONTRACT_ID,
      </if>
      <if test="contractNo != null">
        CONTRACT_NO,
      </if>
      <if test="contractName != null">
        CONTRACT_NAME,
      </if>
      <if test="contractFileId != null">
        CONTRACT_FILE_ID,
      </if>
      <if test="fundContractIds != null">
        FUND_CONTRACT_IDS,
      </if>
      <if test="fundContractNos != null">
        FUND_CONTRACT_NOS,
      </if>
      <if test="fundContractNames != null">
        FUND_CONTRACT_NAMES,
      </if>
      <if test="fundContractFileIds != null">
        FUND_CONTRACT_FILE_IDS,
      </if>
      <if test="creditNodeData != null">
        CREDIT_NODE_DATA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        #{seqId,jdbcType=VARCHAR},
      </if>
      <if test="creditApplyLogId != null">
        #{creditApplyLogId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="creditNode != null">
        #{creditNode,jdbcType=VARCHAR},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=CHAR},
      </if>
      <if test="creditNodeSort != null">
        #{creditNodeSort,jdbcType=INTEGER},
      </if>
      <if test="fundNodeSeq != null">
        #{fundNodeSeq,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=CHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractFileId != null">
        #{contractFileId,jdbcType=VARCHAR},
      </if>
      <if test="fundContractIds != null">
        #{fundContractIds,jdbcType=VARCHAR},
      </if>
      <if test="fundContractNos != null">
        #{fundContractNos,jdbcType=VARCHAR},
      </if>
      <if test="fundContractNames != null">
        #{fundContractNames,jdbcType=VARCHAR},
      </if>
      <if test="fundContractFileIds != null">
        #{fundContractFileIds,jdbcType=VARCHAR},
      </if>
      <if test="creditNodeData != null">
        #{creditNodeData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample" resultType="java.lang.Long">
    select count(*) from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_credit_apply_node_info
    <set>
      <if test="record.seqId != null">
        SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditApplyLogId != null">
        CREDIT_APPLY_LOG_ID = #{record.creditApplyLogId,jdbcType=VARCHAR},
      </if>
      <if test="record.lesseeId != null">
        LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditNode != null">
        CREDIT_NODE = #{record.creditNode,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeType != null">
        NODE_TYPE = #{record.nodeType,jdbcType=CHAR},
      </if>
      <if test="record.creditNodeSort != null">
        CREDIT_NODE_SORT = #{record.creditNodeSort,jdbcType=INTEGER},
      </if>
      <if test="record.fundNodeSeq != null">
        FUND_NODE_SEQ = #{record.fundNodeSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null">
        APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      </if>
      <if test="record.contractId != null">
        CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNo != null">
        CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contractName != null">
        CONTRACT_NAME = #{record.contractName,jdbcType=VARCHAR},
      </if>
      <if test="record.contractFileId != null">
        CONTRACT_FILE_ID = #{record.contractFileId,jdbcType=VARCHAR},
      </if>
      <if test="record.fundContractIds != null">
        FUND_CONTRACT_IDS = #{record.fundContractIds,jdbcType=VARCHAR},
      </if>
      <if test="record.fundContractNos != null">
        FUND_CONTRACT_NOS = #{record.fundContractNos,jdbcType=VARCHAR},
      </if>
      <if test="record.fundContractNames != null">
        FUND_CONTRACT_NAMES = #{record.fundContractNames,jdbcType=VARCHAR},
      </if>
      <if test="record.fundContractFileIds != null">
        FUND_CONTRACT_FILE_IDS = #{record.fundContractFileIds,jdbcType=VARCHAR},
      </if>
      <if test="record.creditNodeData != null">
        CREDIT_NODE_DATA = #{record.creditNodeData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_credit_apply_node_info
    set SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      CREDIT_APPLY_LOG_ID = #{record.creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{record.creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{record.nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{record.creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{record.fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{record.contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{record.contractFileId,jdbcType=VARCHAR},
      FUND_CONTRACT_IDS = #{record.fundContractIds,jdbcType=VARCHAR},
      FUND_CONTRACT_NOS = #{record.fundContractNos,jdbcType=VARCHAR},
      FUND_CONTRACT_NAMES = #{record.fundContractNames,jdbcType=VARCHAR},
      FUND_CONTRACT_FILE_IDS = #{record.fundContractFileIds,jdbcType=VARCHAR},
      CREDIT_NODE_DATA = #{record.creditNodeData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_credit_apply_node_info
    set SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      CREDIT_APPLY_LOG_ID = #{record.creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{record.creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{record.nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{record.creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{record.fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{record.contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{record.contractFileId,jdbcType=VARCHAR},
      FUND_CONTRACT_IDS = #{record.fundContractIds,jdbcType=VARCHAR},
      FUND_CONTRACT_NOS = #{record.fundContractNos,jdbcType=VARCHAR},
      FUND_CONTRACT_NAMES = #{record.fundContractNames,jdbcType=VARCHAR},
      FUND_CONTRACT_FILE_IDS = #{record.fundContractFileIds,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    update t_credit_apply_node_info
    <set>
      <if test="creditApplyLogId != null">
        CREDIT_APPLY_LOG_ID = #{creditApplyLogId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="creditNode != null">
        CREDIT_NODE = #{creditNode,jdbcType=VARCHAR},
      </if>
      <if test="nodeType != null">
        NODE_TYPE = #{nodeType,jdbcType=CHAR},
      </if>
      <if test="creditNodeSort != null">
        CREDIT_NODE_SORT = #{creditNodeSort,jdbcType=INTEGER},
      </if>
      <if test="fundNodeSeq != null">
        FUND_NODE_SEQ = #{fundNodeSeq,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        APPLY_TYPE = #{applyType,jdbcType=CHAR},
      </if>
      <if test="contractId != null">
        CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null">
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        CONTRACT_NAME = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractFileId != null">
        CONTRACT_FILE_ID = #{contractFileId,jdbcType=VARCHAR},
      </if>
      <if test="fundContractIds != null">
        FUND_CONTRACT_IDS = #{fundContractIds,jdbcType=VARCHAR},
      </if>
      <if test="fundContractNos != null">
        FUND_CONTRACT_NOS = #{fundContractNos,jdbcType=VARCHAR},
      </if>
      <if test="fundContractNames != null">
        FUND_CONTRACT_NAMES = #{fundContractNames,jdbcType=VARCHAR},
      </if>
      <if test="fundContractFileIds != null">
        FUND_CONTRACT_FILE_IDS = #{fundContractFileIds,jdbcType=VARCHAR},
      </if>
      <if test="creditNodeData != null">
        CREDIT_NODE_DATA = #{creditNodeData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    update t_credit_apply_node_info
    set CREDIT_APPLY_LOG_ID = #{creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=BIGINT},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{applyType,jdbcType=CHAR},
      CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{contractFileId,jdbcType=VARCHAR},
      FUND_CONTRACT_IDS = #{fundContractIds,jdbcType=VARCHAR},
      FUND_CONTRACT_NOS = #{fundContractNos,jdbcType=VARCHAR},
      FUND_CONTRACT_NAMES = #{fundContractNames,jdbcType=VARCHAR},
      FUND_CONTRACT_FILE_IDS = #{fundContractFileIds,jdbcType=VARCHAR},
      CREDIT_NODE_DATA = #{creditNodeData,jdbcType=LONGVARCHAR}
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    update t_credit_apply_node_info
    set CREDIT_APPLY_LOG_ID = #{creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=BIGINT},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{applyType,jdbcType=CHAR},
      CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{contractFileId,jdbcType=VARCHAR},
      FUND_CONTRACT_IDS = #{fundContractIds,jdbcType=VARCHAR},
      FUND_CONTRACT_NOS = #{fundContractNos,jdbcType=VARCHAR},
      FUND_CONTRACT_NAMES = #{fundContractNames,jdbcType=VARCHAR},
      FUND_CONTRACT_FILE_IDS = #{fundContractFileIds,jdbcType=VARCHAR}
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    <id column="SEQ_ID" jdbcType="VARCHAR" property="seqId" />
    <result column="CREDIT_APPLY_LOG_ID" jdbcType="VARCHAR" property="creditApplyLogId" />
    <result column="LESSEE_ID" jdbcType="VARCHAR" property="lesseeId" />
    <result column="CUSTOMER_ID" jdbcType="VARCHAR" property="customerId" />
    <result column="PRODUCT_ID" jdbcType="VARCHAR" property="productId" />
    <result column="CREDIT_NODE" jdbcType="VARCHAR" property="creditNode" />
    <result column="NODE_TYPE" jdbcType="CHAR" property="nodeType" />
    <result column="CREDIT_NODE_SORT" jdbcType="INTEGER" property="creditNodeSort" />
    <result column="FUND_NODE_SEQ" jdbcType="VARCHAR" property="fundNodeSeq" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="CREATE_TIME" jdbcType="BIGINT" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="BIGINT" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="APPLY_TYPE" jdbcType="CHAR" property="applyType" />
    <result column="CONTRACT_ID" jdbcType="VARCHAR" property="contractId" />
    <result column="CONTRACT_NO" jdbcType="VARCHAR" property="contractNo" />
    <result column="CONTRACT_NAME" jdbcType="VARCHAR" property="contractName" />
    <result column="CONTRACT_FILE_ID" jdbcType="VARCHAR" property="contractFileId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    <result column="CREDIT_NODE_DATA" jdbcType="LONGVARCHAR" property="creditNodeData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SEQ_ID, CREDIT_APPLY_LOG_ID, LESSEE_ID, CUSTOMER_ID, PRODUCT_ID, CREDIT_NODE, NODE_TYPE, 
    CREDIT_NODE_SORT, FUND_NODE_SEQ, STATUS, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER, 
    REMARK, APPLY_TYPE, CONTRACT_ID, CONTRACT_NO, CONTRACT_NAME, CONTRACT_FILE_ID
  </sql>
  <sql id="Blob_Column_List">
    CREDIT_NODE_DATA
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_credit_apply_node_info
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_credit_apply_node_info
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample">
    delete from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    insert into t_credit_apply_node_info (SEQ_ID, CREDIT_APPLY_LOG_ID, LESSEE_ID, 
      CUSTOMER_ID, PRODUCT_ID, CREDIT_NODE, 
      NODE_TYPE, CREDIT_NODE_SORT, FUND_NODE_SEQ, 
      STATUS, CREATE_TIME, CREATE_USER, 
      UPDATE_TIME, UPDATE_USER, REMARK, 
      APPLY_TYPE, CONTRACT_ID, CONTRACT_NO, 
      CONTRACT_NAME, CONTRACT_FILE_ID, CREDIT_NODE_DATA
      )
    values (#{seqId,jdbcType=VARCHAR}, #{creditApplyLogId,jdbcType=VARCHAR}, #{lesseeId,jdbcType=VARCHAR}, 
      #{customerId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{creditNode,jdbcType=VARCHAR}, 
      #{nodeType,jdbcType=CHAR}, #{creditNodeSort,jdbcType=INTEGER}, #{fundNodeSeq,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{createTime,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=BIGINT}, #{updateUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{applyType,jdbcType=CHAR}, #{contractId,jdbcType=VARCHAR}, #{contractNo,jdbcType=VARCHAR}, 
      #{contractName,jdbcType=VARCHAR}, #{contractFileId,jdbcType=VARCHAR}, #{creditNodeData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    insert into t_credit_apply_node_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        SEQ_ID,
      </if>
      <if test="creditApplyLogId != null">
        CREDIT_APPLY_LOG_ID,
      </if>
      <if test="lesseeId != null">
        LESSEE_ID,
      </if>
      <if test="customerId != null">
        CUSTOMER_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="creditNode != null">
        CREDIT_NODE,
      </if>
      <if test="nodeType != null">
        NODE_TYPE,
      </if>
      <if test="creditNodeSort != null">
        CREDIT_NODE_SORT,
      </if>
      <if test="fundNodeSeq != null">
        FUND_NODE_SEQ,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="applyType != null">
        APPLY_TYPE,
      </if>
      <if test="contractId != null">
        CONTRACT_ID,
      </if>
      <if test="contractNo != null">
        CONTRACT_NO,
      </if>
      <if test="contractName != null">
        CONTRACT_NAME,
      </if>
      <if test="contractFileId != null">
        CONTRACT_FILE_ID,
      </if>
      <if test="creditNodeData != null">
        CREDIT_NODE_DATA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seqId != null">
        #{seqId,jdbcType=VARCHAR},
      </if>
      <if test="creditApplyLogId != null">
        #{creditApplyLogId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="creditNode != null">
        #{creditNode,jdbcType=VARCHAR},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=CHAR},
      </if>
      <if test="creditNodeSort != null">
        #{creditNodeSort,jdbcType=INTEGER},
      </if>
      <if test="fundNodeSeq != null">
        #{fundNodeSeq,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=CHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractFileId != null">
        #{contractFileId,jdbcType=VARCHAR},
      </if>
      <if test="creditNodeData != null">
        #{creditNodeData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfoExample" resultType="java.lang.Long">
    select count(*) from t_credit_apply_node_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_credit_apply_node_info
    <set>
      <if test="record.seqId != null">
        SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditApplyLogId != null">
        CREDIT_APPLY_LOG_ID = #{record.creditApplyLogId,jdbcType=VARCHAR},
      </if>
      <if test="record.lesseeId != null">
        LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditNode != null">
        CREDIT_NODE = #{record.creditNode,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeType != null">
        NODE_TYPE = #{record.nodeType,jdbcType=CHAR},
      </if>
      <if test="record.creditNodeSort != null">
        CREDIT_NODE_SORT = #{record.creditNodeSort,jdbcType=INTEGER},
      </if>
      <if test="record.fundNodeSeq != null">
        FUND_NODE_SEQ = #{record.fundNodeSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null">
        APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      </if>
      <if test="record.contractId != null">
        CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNo != null">
        CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contractName != null">
        CONTRACT_NAME = #{record.contractName,jdbcType=VARCHAR},
      </if>
      <if test="record.contractFileId != null">
        CONTRACT_FILE_ID = #{record.contractFileId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditNodeData != null">
        CREDIT_NODE_DATA = #{record.creditNodeData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_credit_apply_node_info
    set SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      CREDIT_APPLY_LOG_ID = #{record.creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{record.creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{record.nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{record.creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{record.fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{record.contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{record.contractFileId,jdbcType=VARCHAR},
      CREDIT_NODE_DATA = #{record.creditNodeData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_credit_apply_node_info
    set SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      CREDIT_APPLY_LOG_ID = #{record.creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{record.lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{record.customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{record.productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{record.creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{record.nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{record.creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{record.fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=BIGINT},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{record.contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{record.contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{record.contractFileId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    update t_credit_apply_node_info
    <set>
      <if test="creditApplyLogId != null">
        CREDIT_APPLY_LOG_ID = #{creditApplyLogId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="creditNode != null">
        CREDIT_NODE = #{creditNode,jdbcType=VARCHAR},
      </if>
      <if test="nodeType != null">
        NODE_TYPE = #{nodeType,jdbcType=CHAR},
      </if>
      <if test="creditNodeSort != null">
        CREDIT_NODE_SORT = #{creditNodeSort,jdbcType=INTEGER},
      </if>
      <if test="fundNodeSeq != null">
        FUND_NODE_SEQ = #{fundNodeSeq,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        APPLY_TYPE = #{applyType,jdbcType=CHAR},
      </if>
      <if test="contractId != null">
        CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null">
        CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        CONTRACT_NAME = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractFileId != null">
        CONTRACT_FILE_ID = #{contractFileId,jdbcType=VARCHAR},
      </if>
      <if test="creditNodeData != null">
        CREDIT_NODE_DATA = #{creditNodeData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    update t_credit_apply_node_info
    set CREDIT_APPLY_LOG_ID = #{creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=BIGINT},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{applyType,jdbcType=CHAR},
      CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{contractFileId,jdbcType=VARCHAR},
      CREDIT_NODE_DATA = #{creditNodeData,jdbcType=LONGVARCHAR}
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ligq.study.mybatis.demo.model.TCreditApplyNodeInfo">
    update t_credit_apply_node_info
    set CREDIT_APPLY_LOG_ID = #{creditApplyLogId,jdbcType=VARCHAR},
      LESSEE_ID = #{lesseeId,jdbcType=VARCHAR},
      CUSTOMER_ID = #{customerId,jdbcType=VARCHAR},
      PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      CREDIT_NODE = #{creditNode,jdbcType=VARCHAR},
      NODE_TYPE = #{nodeType,jdbcType=CHAR},
      CREDIT_NODE_SORT = #{creditNodeSort,jdbcType=INTEGER},
      FUND_NODE_SEQ = #{fundNodeSeq,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=BIGINT},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=BIGINT},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      APPLY_TYPE = #{applyType,jdbcType=CHAR},
      CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      CONTRACT_NO = #{contractNo,jdbcType=VARCHAR},
      CONTRACT_NAME = #{contractName,jdbcType=VARCHAR},
      CONTRACT_FILE_ID = #{contractFileId,jdbcType=VARCHAR}
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
</mapper>