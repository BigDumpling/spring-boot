<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ligq.study.mybatis.demo.dao.TPropertyInfoMapper">
  <resultMap id="BaseResultMap" type="com.ligq.study.mybatis.demo.model.TPropertyInfo">
    <id column="property_id" jdbcType="VARCHAR" property="propertyId" />
    <result column="out_order_id" jdbcType="VARCHAR" property="outOrderId" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="out_customer_id" jdbcType="VARCHAR" property="outCustomerId" />
    <result column="branch_code" jdbcType="VARCHAR" property="branchCode" />
    <result column="branch_id" jdbcType="VARCHAR" property="branchId" />
    <result column="branch_name" jdbcType="VARCHAR" property="branchName" />
    <result column="property_sum_amt" jdbcType="BIGINT" property="propertySumAmt" />
    <result column="pay_amt" jdbcType="BIGINT" property="payAmt" />
    <result column="use_amt" jdbcType="BIGINT" property="useAmt" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="recon_time" jdbcType="TIMESTAMP" property="reconTime" />
    <result column="settle_time" jdbcType="TIMESTAMP" property="settleTime" />
    <result column="pay_time" jdbcType="BIGINT" property="payTime" />
    <result column="is_repay" jdbcType="CHAR" property="isRepay" />
    <result column="property_status" jdbcType="CHAR" property="propertyStatus" />
    <result column="system_status" jdbcType="CHAR" property="systemStatus" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="lessee_id" jdbcType="VARCHAR" property="lesseeId" />
    <result column="lessee_name" jdbcType="VARCHAR" property="lesseeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    property_id, out_order_id, customer_id, out_customer_id, branch_code, branch_id, 
    branch_name, property_sum_amt, pay_amt, use_amt, order_time, check_time, recon_time, 
    settle_time, pay_time, is_repay, property_status, system_status, create_time, update_time, 
    order_id, lessee_id, lessee_name
  </sql>
  <select id="selectByExample" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_property_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_property_info
    where property_id = #{propertyId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_property_info
    where property_id = #{propertyId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfoExample">
    delete from t_property_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfo">
    insert into t_property_info (property_id, out_order_id, customer_id, 
      out_customer_id, branch_code, branch_id, 
      branch_name, property_sum_amt, pay_amt, 
      use_amt, order_time, check_time, 
      recon_time, settle_time, pay_time, 
      is_repay, property_status, system_status, 
      create_time, update_time, order_id, 
      lessee_id, lessee_name)
    values (#{propertyId,jdbcType=VARCHAR}, #{outOrderId,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, 
      #{outCustomerId,jdbcType=VARCHAR}, #{branchCode,jdbcType=VARCHAR}, #{branchId,jdbcType=VARCHAR}, 
      #{branchName,jdbcType=VARCHAR}, #{propertySumAmt,jdbcType=BIGINT}, #{payAmt,jdbcType=BIGINT}, 
      #{useAmt,jdbcType=BIGINT}, #{orderTime,jdbcType=TIMESTAMP}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{reconTime,jdbcType=TIMESTAMP}, #{settleTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=BIGINT}, 
      #{isRepay,jdbcType=CHAR}, #{propertyStatus,jdbcType=CHAR}, #{systemStatus,jdbcType=CHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, 
      #{lesseeId,jdbcType=VARCHAR}, #{lesseeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfo">
    insert into t_property_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="propertyId != null">
        property_id,
      </if>
      <if test="outOrderId != null">
        out_order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="outCustomerId != null">
        out_customer_id,
      </if>
      <if test="branchCode != null">
        branch_code,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="branchName != null">
        branch_name,
      </if>
      <if test="propertySumAmt != null">
        property_sum_amt,
      </if>
      <if test="payAmt != null">
        pay_amt,
      </if>
      <if test="useAmt != null">
        use_amt,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="reconTime != null">
        recon_time,
      </if>
      <if test="settleTime != null">
        settle_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="isRepay != null">
        is_repay,
      </if>
      <if test="propertyStatus != null">
        property_status,
      </if>
      <if test="systemStatus != null">
        system_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="lesseeId != null">
        lessee_id,
      </if>
      <if test="lesseeName != null">
        lessee_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="propertyId != null">
        #{propertyId,jdbcType=VARCHAR},
      </if>
      <if test="outOrderId != null">
        #{outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="outCustomerId != null">
        #{outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="branchCode != null">
        #{branchCode,jdbcType=VARCHAR},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null">
        #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="propertySumAmt != null">
        #{propertySumAmt,jdbcType=BIGINT},
      </if>
      <if test="payAmt != null">
        #{payAmt,jdbcType=BIGINT},
      </if>
      <if test="useAmt != null">
        #{useAmt,jdbcType=BIGINT},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reconTime != null">
        #{reconTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settleTime != null">
        #{settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=BIGINT},
      </if>
      <if test="isRepay != null">
        #{isRepay,jdbcType=CHAR},
      </if>
      <if test="propertyStatus != null">
        #{propertyStatus,jdbcType=CHAR},
      </if>
      <if test="systemStatus != null">
        #{systemStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeName != null">
        #{lesseeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfoExample" resultType="java.lang.Long">
    select count(*) from t_property_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_property_info
    <set>
      <if test="record.propertyId != null">
        property_id = #{record.propertyId,jdbcType=VARCHAR},
      </if>
      <if test="record.outOrderId != null">
        out_order_id = #{record.outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.outCustomerId != null">
        out_customer_id = #{record.outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="record.branchCode != null">
        branch_code = #{record.branchCode,jdbcType=VARCHAR},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=VARCHAR},
      </if>
      <if test="record.branchName != null">
        branch_name = #{record.branchName,jdbcType=VARCHAR},
      </if>
      <if test="record.propertySumAmt != null">
        property_sum_amt = #{record.propertySumAmt,jdbcType=BIGINT},
      </if>
      <if test="record.payAmt != null">
        pay_amt = #{record.payAmt,jdbcType=BIGINT},
      </if>
      <if test="record.useAmt != null">
        use_amt = #{record.useAmt,jdbcType=BIGINT},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reconTime != null">
        recon_time = #{record.reconTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.settleTime != null">
        settle_time = #{record.settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=BIGINT},
      </if>
      <if test="record.isRepay != null">
        is_repay = #{record.isRepay,jdbcType=CHAR},
      </if>
      <if test="record.propertyStatus != null">
        property_status = #{record.propertyStatus,jdbcType=CHAR},
      </if>
      <if test="record.systemStatus != null">
        system_status = #{record.systemStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.lesseeId != null">
        lessee_id = #{record.lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="record.lesseeName != null">
        lessee_name = #{record.lesseeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_property_info
    set property_id = #{record.propertyId,jdbcType=VARCHAR},
      out_order_id = #{record.outOrderId,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=VARCHAR},
      out_customer_id = #{record.outCustomerId,jdbcType=VARCHAR},
      branch_code = #{record.branchCode,jdbcType=VARCHAR},
      branch_id = #{record.branchId,jdbcType=VARCHAR},
      branch_name = #{record.branchName,jdbcType=VARCHAR},
      property_sum_amt = #{record.propertySumAmt,jdbcType=BIGINT},
      pay_amt = #{record.payAmt,jdbcType=BIGINT},
      use_amt = #{record.useAmt,jdbcType=BIGINT},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      recon_time = #{record.reconTime,jdbcType=TIMESTAMP},
      settle_time = #{record.settleTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=BIGINT},
      is_repay = #{record.isRepay,jdbcType=CHAR},
      property_status = #{record.propertyStatus,jdbcType=CHAR},
      system_status = #{record.systemStatus,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      lessee_id = #{record.lesseeId,jdbcType=VARCHAR},
      lessee_name = #{record.lesseeName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfo">
    update t_property_info
    <set>
      <if test="outOrderId != null">
        out_order_id = #{outOrderId,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="outCustomerId != null">
        out_customer_id = #{outCustomerId,jdbcType=VARCHAR},
      </if>
      <if test="branchCode != null">
        branch_code = #{branchCode,jdbcType=VARCHAR},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null">
        branch_name = #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="propertySumAmt != null">
        property_sum_amt = #{propertySumAmt,jdbcType=BIGINT},
      </if>
      <if test="payAmt != null">
        pay_amt = #{payAmt,jdbcType=BIGINT},
      </if>
      <if test="useAmt != null">
        use_amt = #{useAmt,jdbcType=BIGINT},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reconTime != null">
        recon_time = #{reconTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settleTime != null">
        settle_time = #{settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=BIGINT},
      </if>
      <if test="isRepay != null">
        is_repay = #{isRepay,jdbcType=CHAR},
      </if>
      <if test="propertyStatus != null">
        property_status = #{propertyStatus,jdbcType=CHAR},
      </if>
      <if test="systemStatus != null">
        system_status = #{systemStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeId != null">
        lessee_id = #{lesseeId,jdbcType=VARCHAR},
      </if>
      <if test="lesseeName != null">
        lessee_name = #{lesseeName,jdbcType=VARCHAR},
      </if>
    </set>
    where property_id = #{propertyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ligq.study.mybatis.demo.model.TPropertyInfo">
    update t_property_info
    set out_order_id = #{outOrderId,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=VARCHAR},
      out_customer_id = #{outCustomerId,jdbcType=VARCHAR},
      branch_code = #{branchCode,jdbcType=VARCHAR},
      branch_id = #{branchId,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      property_sum_amt = #{propertySumAmt,jdbcType=BIGINT},
      pay_amt = #{payAmt,jdbcType=BIGINT},
      use_amt = #{useAmt,jdbcType=BIGINT},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      recon_time = #{reconTime,jdbcType=TIMESTAMP},
      settle_time = #{settleTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=BIGINT},
      is_repay = #{isRepay,jdbcType=CHAR},
      property_status = #{propertyStatus,jdbcType=CHAR},
      system_status = #{systemStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=VARCHAR},
      lessee_id = #{lesseeId,jdbcType=VARCHAR},
      lessee_name = #{lesseeName,jdbcType=VARCHAR}
    where property_id = #{propertyId,jdbcType=VARCHAR}
  </update>
</mapper>